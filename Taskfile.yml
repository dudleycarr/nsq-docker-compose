# https://taskfile.dev

version: '3'

tasks:
  run:
    desc: Start nsq services with the default configuration.
    vars:
      DOCKERFILE: '{{default "./with_graphite/docker-compose.yml" .DOCKERFILE}}'
    cmds:
      - docker compose -f {{.DOCKERFILE}} up -d

  stop:
    desc: Stop nsq services with the default configuration.
    vars:
      DOCKERFILE: '{{default "./with_graphite/docker-compose.yml" .DOCKERFILE}}'
    cmds:
      - docker compose -f {{.DOCKERFILE}} down

  basic:run:
    desc: Start nsq services with the basic configuration.
    summary: |
      Configuration includes a nsqlookupd, nsqadmin, and a single nsqd. Graphs
      are not enabled within nsqadmin.
    cmds:
      - task: run
        vars: { DOCKERFILE: './basic/docker-compose.yml' }

  basic:stop:
    desc: Stop nsq services with the basic configuration.
    cmds:
      - task: stop
        vars: { DOCKERFILE: './basic/docker-compose.yml' }

  with_graphite:run:
    desc: Start nsq services with nsqadmin graphs enabled.
    summary: |
      Configuration includes a graphite, statsd, nsqlookupd, nsqadmin, and a
      single nsqd. Graphs in nsqadmin are generated by graphite.
    cmds:
      - task: run
        vars: { DOCKERFILE: './with_graphite/docker-compose.yml' }

  with_graphite:stop:
    desc: Stop nsq services with nsqadmin graphs enabled.
    cmds:
      - task: stop
        vars: { DOCKERFILE: './with_graphite/docker-compose.yml' }

  multiple_nsqds:run:
    desc: Start nsq services with nsqadmin graphs enabled.
    summary: |
      Configuration includes a graphite, statsd, nsqlookupd, nsqadmin, and a
      single nsqd. Graphs in nsqadmin are generated by graphite.
    cmds:
      - task: run
        vars: { DOCKERFILE: './multiple_nsqds/docker-compose.yml' }

  multiple_nsqds:stop:
    desc: Stop nsq services with nsqadmin graphs enabled.
    cmds:
      - task: stop
        vars: { DOCKERFILE: './multiple_nsqds/docker-compose.yml' }

  simulation:
    cmds:
      - |-
        benthos \
          -config ./simulation/config.yml \
          streams \
          simulation/producer_*.yml \
          simulation/consumer_*.yml
